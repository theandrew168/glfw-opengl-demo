# Request POSIX Make behavior and disable any default suffix-based rules
.POSIX:
.SUFFIXES:


# Declare compiler tools and flags
CC      = x86_64-w64-mingw32-gcc
CFLAGS  = -std=c99
CFLAGS += -D__USE_MINGW_ANSI_STDIO
CFLAGS += -fPIC -g -Og
CFLAGS += -Wall -Wextra -Wpedantic
CFLAGS += -Wno-unused-parameter -Wno-unused-result -Wno-unused-function
CFLAGS += -Isrc/ -Ivendor/include/
LDFLAGS = -mwindows
LDLIBS  = -lmingw32
LDLIBS += vendor/lib64/mingw/libglfw3.a
LDLIBS += -lgdi32 -limm32 -lole32 -loleaut32
LDLIBS += -lopengl32 -lsetupapi -lversion -lwinmm


# Build the main executable
demo.exe: src/main.c src/opengl.c src/opengl.h vendor/lib64/mingw/libglfw3.a
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ src/main.c src/opengl.c $(LDLIBS)


# Helper target that cleans up build artifacts
.PHONY: clean
clean:
	rm -fr demo demo.exe src/*.o


# Default rule for compiling .c files to .o object files
.SUFFIXES: .c .o
.c.o:
	$(CC) $(CFLAGS) -c -o $@ $<
